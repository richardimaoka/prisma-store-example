// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// https://www.prisma.io/docs/orm/prisma-client/setup-and-configuration/no-rust-engine
generator client {
  provider   = "prisma-client"
  output     = "../generated/prisma"
  engineType = "client" // enable Prisma ORM without Rust
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/// 販売データを表すモデル
model SalesRecord {
  id           Int      @id @default(autoincrement())
  productName  String
  quantity     Int
  price        Int
  size         String
  color        String
  storeName    String
  storeAddress String
  createdAt    DateTime @default(now())
}

model SalesProduct {
  id          Int             @id @default(autoincrement())
  productName String
  sizes       AvailableSize[]
}

model AvailableSize {
  id             Int          @id @default(autoincrement())
  size           String
  SalesProduct   SalesProduct @relation(fields: [salesProductId], references: [id])
  salesProductId Int
}

//---------------------
//---------------------
//---------------------
model ExtendedProfile {
  id        Int    @id @default(autoincrement())
  biography String
  user      User   @relation(fields: [userId], references: [id])
  userId    Int    @unique
}

model User {
  id           Int              @id @default(autoincrement())
  name         String?
  email        String           @unique
  profileViews Int              @default(0)
  role         Role             @default(USER)
  // coinflips    Boolean[]
  posts        Post[]
  profile      ExtendedProfile?
}

model Post {
  id         Int        @id @default(autoincrement())
  title      String
  published  Boolean    @default(true)
  author     User       @relation(fields: [authorId], references: [id])
  authorId   Int
  comments   Json?
  views      Int        @default(0)
  likes      Int        @default(0)
  categories Category[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}

enum Role {
  USER
  ADMIN
}
